<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>为Hexo增加本地搜索</title>
      <link href="/2018/02/22/Hexo%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2--20180222/"/>
      <content type="html"><![CDATA[<h2 id="第一步：通过npm安装插件"><a href="#第一步：通过npm安装插件" class="headerlink" title="第一步：通过npm安装插件"></a>第一步：通过npm安装插件</h2><p>一、在站点的根目录下执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p><a id="more"></a> <p>二、在站点的根目录下执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p><img src="http://blog2018.nos-eastchina1.126.net/201802220636/pic01.png" width="600px"></p><h2 id="第二步：编辑站点配置文件"><a href="#第二步：编辑站点配置文件" class="headerlink" title="第二步：编辑站点配置文件"></a>第二步：编辑站点配置文件</h2><p>编辑 站点配置文件，新增以下内容到任意位置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></p><hr><p>【发布时间】: 201802220636<br>【版        本】: V1.0<br>【修改时间】: 20180222</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo生成一篇新文章</title>
      <link href="/2018/02/14/Hexo%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E6%96%87%E7%AB%A0--20180214/"/>
      <content type="html"><![CDATA[<h2 id="一、官方文档"><a href="#一、官方文档" class="headerlink" title="一、官方文档"></a>一、官方文档</h2><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic01.png" class="full-image" width="600px"></p><p>使用 <code>hexo new [layout] &lt;title&gt;</code> 命令生成一篇文章。若 <code>layout</code> 没有指明的话，hexo会使用“_config.yml”中 <code>default_layout</code> 的默认配置（post）。若title包含空格，要用引号括起来。</p><a id="more"></a><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic02.png" width="400px"></p><h2 id="二、layout三个选项"><a href="#二、layout三个选项" class="headerlink" title="二、layout三个选项"></a>二、<code>layout</code>三个选项</h2><p>Hexo提供了3种布局，post、page和draft，路径分别为：source/_posts、source/xxx、source/_draft，默认布局是post。<br>这3种布局来源于scaffolds（模板）文件夹的三个md文件，如下图：</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic03.png" width="400px">  </p><p>【注】新建文章时，Hexo 也可根据 scaffolds 文件夹内相对应的文件来建立文件，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure></p><p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章.</p><h2 id="三、使用默认布局post，发表文章"><a href="#三、使用默认布局post，发表文章" class="headerlink" title="三、使用默认布局post，发表文章"></a>三、使用默认布局post，发表文章</h2><h3 id="1、执行命令，生成md文件"><a href="#1、执行命令，生成md文件" class="headerlink" title="1、执行命令，生成md文件"></a>1、执行命令，生成md文件</h3><p>执行<code>hexo new post myBlog</code>  ，提示信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post myBlog</span><br><span class="line">INFO  Created: D:\www\leejianzhou.github.io\source\_posts\myBlog.md</span><br><span class="line">Administrator@CW-001 MINGW32 /d/www/leejianzhou.github.io</span><br></pre></td></tr></table></figure><p>上面的命令在 <code>source\_post</code> 文件夹中生成了一个“myBlog.md”文件。</p><h3 id="2、编辑“myBlog-md”文件"><a href="#2、编辑“myBlog-md”文件" class="headerlink" title="2、编辑“myBlog.md”文件"></a>2、编辑“myBlog.md”文件</h3><p>使用Markdown编辑器打开生成的“myBlog.md”文件。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic04.png" width="300px"></p><pre><code>title：文章页面上的显示标题，可以修改，不会出现在URL中  date：文件创建日期时间，可以修改tags: 文章的标签，可空，多标签请用格式[tag1,tag2,tag3]</code></pre><p>上下两套横线之间的内容，在未来的文章之中不会出现。<br>编写这一部分内容时要注意，两套横线不要删除，冒号前的内容不要修改，冒号后面跟一个空格。<br>文章的正文支持Markdown语法，下面是这个文件编辑修改后的内容：<br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic05.png" width="300px"></p><ul><li>执行“hexo generate”命令，Hexo 监视网站内的文件变动并立即重新生成静态文件。</li><li>执行 “hexo server” 启动本地服务器，如下图。</li></ul><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic06.png" width="600px"></p><ul><li>打开浏览器，登录“<a href="http://localhost:4000”就可看到本地的博客。" target="_blank" rel="noopener">http://localhost:4000”就可看到本地的博客。</a></li></ul><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic07.png" width="600px"></p><h2 id="四、使用draft布局发表文章"><a href="#四、使用draft布局发表文章" class="headerlink" title="四、使用draft布局发表文章"></a>四、使用draft布局发表文章</h2><p>使用这种布局生成的md文件，将放到<code>source/_drafts</code>文件夹中，这个md文件不被显示在网站的页面，将做为draft（草稿）保存起来。  </p><h3 id="1、生成草稿文件"><a href="#1、生成草稿文件" class="headerlink" title="1、生成草稿文件"></a>1、生成草稿文件</h3><p>下面的<code>hexo new draft &quot;草稿--draft&quot;</code>命令，会在source/_drafts目录下生成一个“草稿-draft.md”文件。  </p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic08.png" width="600px"><br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic09.png" width="400px">  </p><h3 id="2、强行预览草稿文件"><a href="#2、强行预览草稿文件" class="headerlink" title="2、强行预览草稿文件"></a>2、强行预览草稿文件</h3><p>预览草稿文件，有以下二种方式：</p><ul><li>更改配置文件_config.yml： <code>render_drafts: true</code></li><li>以如下方式启动本地服务器：<code>hexo server --drafts</code>  </li></ul><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic10.png" width="600px"></p><h3 id="3、发布草稿文件"><a href="#3、发布草稿文件" class="headerlink" title="3、发布草稿文件"></a>3、发布草稿文件</h3><p>使用<code>hexo publish [layout] &lt;filename&gt;</code>命令可以把草稿变成文章，或者页面，如下所示：  </p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic11.png" width="600px"><br>执行命令后， “草稿-draft.md”文件被发布到了_posts文件夹中。</p><h2 id="五、使用page布局，创建新的路径"><a href="#五、使用page布局，创建新的路径" class="headerlink" title="五、使用page布局，创建新的路径"></a>五、使用page布局，创建新的路径</h2><h3 id="1、执行hexo-new-page-quot-about-quot-命令，如下："><a href="#1、执行hexo-new-page-quot-about-quot-命令，如下：" class="headerlink" title="1、执行hexo new page &quot;about&quot;命令，如下："></a>1、执行<code>hexo new page &quot;about&quot;</code>命令，如下：</h3><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic12.png" width="600px"></p><p>这个命令将在source文件夹下建立一个“about”文件夹，里面会有一个index.md的文件。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic13.png" width="400px"><br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic14.png" width="400px"></p><h3 id="2、编辑index-md文件"><a href="#2、编辑index-md文件" class="headerlink" title="2、编辑index.md文件"></a>2、编辑index.md文件</h3><p>使用Markdown编辑器打开生成的“index.md”文件，随便添加了点内容。  </p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic15.png" width="400px"></p><h3 id="3、将新路径的链接添加到页面中"><a href="#3、将新路径的链接添加到页面中" class="headerlink" title="3、将新路径的链接添加到页面中"></a>3、将新路径的链接添加到页面中</h3><p>打开当前主题中的配置文件<code>themes/&lt;theme_name&gt;/_config.yml</code></p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic16.png" width="400px"><br>在menu:项中添加 <code>关于: /about</code>，保存退出。<br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic17.png" width="200px"></p><p>生成页面，打开博客后，在页面中就看到了“关于”链接。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic18.png" width="400px"></p><p>单击“关于”链接，将打开这个页面。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141650/pic19.png" width="400px"></p><hr><p>【发布时间】: 201802141650<br>【版        本】: V1.0<br>【修改时间】: 20180214</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo中Next主题的配置</title>
      <link href="/2018/02/14/Hexo%E4%B8%ADNext%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE--20180214/"/>
      <content type="html"><![CDATA[<h2 id="一、主题官网"><a href="#一、主题官网" class="headerlink" title="一、主题官网"></a>一、主题官网</h2><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">网址</a>：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a>  </p><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">中文说明文档</a></p><h3 id="1、下载最新-master-分支"><a href="#1、下载最新-master-分支" class="headerlink" title="1、下载最新 master 分支"></a>1、下载最新 master 分支</h3><a id="more"></a><p>使用 git 安装，在博客网站本地文件夹中，打开“Git Bash Here”，执行命令：  </p><div class="note info"><p>git clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> themes/next</p></div><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141600/pic01.png" width="400px"></p><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141600/pic02.png" width="400px"></p><h3 id="2、编辑-config-yml配置文件，修改主题"><a href="#2、编辑-config-yml配置文件，修改主题" class="headerlink" title="2、编辑 _config.yml配置文件，修改主题"></a>2、编辑 _config.yml配置文件，修改主题</h3><p>在 hexo 根配置文件 _config.yml 中设置主题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><h3 id="1、更改主题样式"><a href="#1、更改主题样式" class="headerlink" title="1、更改主题样式"></a>1、更改主题样式</h3><ul><li>Next主题提供了四种样式，修改主题中的配置文件_config.yml，可以实现样式的更改。</li><li>编辑_config.yml，搜索 scheme 关键字，将相应样式前的#去掉。<br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802141600/pic03.png" width="200px"></li></ul><h3 id="2、更改博客语言"><a href="#2、更改博客语言" class="headerlink" title="2、更改博客语言"></a>2、更改博客语言</h3><p>按照next的官方指导教程，我们顺便修改一下站点配置文件里面的语言（也就是整个博客的语言）<br>将language后面的内容修改为 zh-CN。<br>注意，冒号之后必有空格！</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802141600/pic04.png" width="200px"></p><h3 id="3、创建分类页面"><a href="#3、创建分类页面" class="headerlink" title="3、创建分类页面"></a>3、创建分类页面</h3><p>添加一个 分类 页面，并在菜单中显示页面链接。</p><p>新建一个页面，命名为 categories 。命令如下：</p><pre><code>hexo new page categories</code></pre><p>编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>在菜单中添加链接。编辑主题的 _config.yml ，将 menu 中的 categories: /categories 注释去掉，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure><p>【注】文章中设置多级目标实例：<br><div class="note info"><hr><p>title: 使用 IntelliJ IDEA 编写Markdown格式文件<br>date: 2018-02-11<br>categories: </p><ul><li>笔记</li><li>Markdown</li><li>t<br>tags: [Markdown]</li></ul><hr></div></p><h3 id="4、创建标签云页面"><a href="#4、创建标签云页面" class="headerlink" title="4、创建标签云页面"></a>4、创建标签云页面</h3><p>添加一个标签云页面，并在菜单中显示页面链接。</p><p>新建一个页面，命名为 tags 。命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>在菜单中添加链接。编辑主题的 _config.yml ，添加 tags 到 menu 中，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure><h3 id="5、设置侧边栏头像"><a href="#5、设置侧边栏头像" class="headerlink" title="5、设置侧边栏头像"></a>5、设置侧边栏头像</h3><p>编辑主题的 _config.yml，新增字段 avatar， 值设置成头像的链接地址。</p><p>其中，头像的链接地址可以是：</p><p>完整的互联网 URL，例如：<a href="https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460" target="_blank" rel="noopener">https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460</a></p><p>站点内的地址，例如：</p><p>/uploads/avatar.jpg 需要将你的头像图片放置在 站点的 source/uploads/（可能需要新建uploads目录）<br>/images/avatar.jpg 需要将你的头像图片放置在 主题的 source/images/ 目录下。</p><h3 id="6-侧边栏社交链接"><a href="#6-侧边栏社交链接" class="headerlink" title="6.侧边栏社交链接"></a>6.侧边栏社交链接</h3><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。</p><ul><li>链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。</li></ul><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Social links</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name</span><br><span class="line">  Twitter: https://twitter.com/your-user-name</span><br><span class="line">  微博: http://weibo.com/your-user-name</span><br><span class="line">  豆瓣: http://douban.com/people/your-user-name</span><br><span class="line">  知乎: http://www.zhihu.com/people/your-user-name</span><br><span class="line">  # 等等</span><br></pre></td></tr></table></figure><ul><li>设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</li></ul><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Social Icons</span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure><h3 id="7、开启百度统计"><a href="#7、开启百度统计" class="headerlink" title="7、开启百度统计"></a>7、开启百度统计</h3><p>登录 百度统计（<a href="https://tongji.baidu.com），定位到站点的代码获取页面" target="_blank" rel="noopener">https://tongji.baidu.com），定位到站点的代码获取页面</a><br>复制 hm.js? 后面那串统计脚本 id，如下图所示：</p><p>编辑 主题配置文件， 修改字段 baidu_analytics，值设置成你的百度统计脚本 id。</p><pre><code>baidu_analytics: 89920f7b4f69c70fb85c179b7689f3cc</code></pre><h3 id="8、添加关于"><a href="#8、添加关于" class="headerlink" title="8、添加关于"></a>8、添加关于</h3><ul><li>执行<code>hexo new page &quot;about&quot;</code>命令</li><li>编辑修改生成的md文件<code>source\about\index.md</code></li><li>主题配置文件中，找到menu，将以下信息前的注释去掉：<code>about: /about/ || user</code></li></ul><h3 id="9、添加友情链接"><a href="#9、添加友情链接" class="headerlink" title="9、添加友情链接"></a>9、添加友情链接</h3><p>编辑 主题配置文件 添加：</p><p>友情链接配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># title</span><br><span class="line">links_title: 友情链接</span><br><span class="line">links:</span><br><span class="line">  MacTalk: http://macshuo.com/</span><br><span class="line">  Title: http://example.com/</span><br></pre></td></tr></table></figure><h3 id="10、腾讯公益404页面"><a href="#10、腾讯公益404页面" class="headerlink" title="10、腾讯公益404页面"></a>10、腾讯公益404页面</h3><h3 id="11、订阅微信公众号"><a href="#11、订阅微信公众号" class="headerlink" title="11、订阅微信公众号"></a>11、订阅微信公众号</h3><p>注意： 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后<br>在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。</p><p>在微信公众号平台下载您的二维码，并将它存放于博客source/uploads/目录下。</p><p>然后编辑 主题配置文件，如下：</p><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Wechat Subscriber</span><br><span class="line">wechat_subscriber:</span><br><span class="line">  enabled: true</span><br><span class="line">  qcode: /uploads/wechat-qcode.jpg</span><br><span class="line">  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！</span><br></pre></td></tr></table></figure><h3 id="12、开启打赏功能"><a href="#12、开启打赏功能" class="headerlink" title="12、开启打赏功能"></a>12、开启打赏功能</h3><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</p><p>打赏功能配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: /uploads/wechatpay.png</span><br></pre></td></tr></table></figure><h3 id="13、代码块自定义样式-内的"><a href="#13、代码块自定义样式-内的" class="headerlink" title="13、代码块自定义样式 `` 内的"></a>13、代码块自定义样式 `` 内的</h3><p>打开自定义 CSS： \themes\next\source\css_custom\custom.styl 加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 代码块自定义样式``内的</span><br><span class="line">code &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="14、设置代码高亮主题"><a href="#14、设置代码高亮主题" class="headerlink" title="14、设置代码高亮主题"></a>14、设置代码高亮主题</h3><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties：</p><p>更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：</p><p>高亮主题设置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available value: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br></pre></td></tr></table></figure><h3 id="15、文章底部的那个带-号的标签"><a href="#15、文章底部的那个带-号的标签" class="headerlink" title="15、文章底部的那个带 #号的标签"></a>15、文章底部的那个带 #号的标签</h3><p>文章底部的那个带 #号的标签，比如 #NexT，可以把 #换成图标吗，怎么设置?</p><ul><li>修改模板 layout/_macro/post.swig  </li><li>搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li></ul><h3 id="16、修改文章内链接文本样式"><a href="#16、修改文章内链接文本样式" class="headerlink" title="16、修改文章内链接文本样式"></a>16、修改文章内链接文本样式</h3><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code> ，添加如下 css 样式，：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择<code>.post-body</code> 是为了不影响标题，选择<code>p</code>是为了不影响首页 “阅读全文” 的显示样式。</p><h3 id="17、开启本地搜索"><a href="#17、开启本地搜索" class="headerlink" title="17、开启本地搜索"></a>17、开启本地搜索</h3><p>添加百度/谷歌/本地 自定义站点内容搜索</p><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><div class="note info"><p>npm install hexo-generator-searchdb –save</p></div><p>编辑 站点配置文件，新增以下内容到任意位置：</p><div class="note success"><p>search:<br>  path: search.xml<br>  field: post<br>  format: html<br>  limit: 10000</p></div><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="18、开启向百度搜索手动推送内容（百度无法抓取github内容，没用）"><a href="#18、开启向百度搜索手动推送内容（百度无法抓取github内容，没用）" class="headerlink" title="18、开启向百度搜索手动推送内容（百度无法抓取github内容，没用）"></a>18、开启向百度搜索手动推送内容（百度无法抓取github内容，没用）</h3><p>添加站点地图<br>先要安装插件<br>Git Bash输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><p>在博客的站点配置文件_config.yml中添加以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">　path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">　path: baidusitemap.xml</span><br></pre></td></tr></table></figure></p><p>然后编译一下博客</p><p>hexo clean &amp;&amp; hexo generate</p><p>这时候在博客的public文件夹下面就会出现站点地图sitemap.xml和baidusitemap.xml了</p><p>sitemap提交<br>sitemap提交最上面提过了，直接提交<a href="http://tengj.top/baidusitemap.xml" target="_blank" rel="noopener">http://tengj.top/baidusitemap.xml</a> 就行，大家看下图就知道，一开始我是提交 sitemap.xml，里面是指向github的，结果主域校验失败了，后来切换到指向tengj.top域名的baidusitemap.xml就提交成功。</p><hr><p>【发布时间】: 201802141600<br>【版        本】: V1.1<br>【修改时间】: 20180215</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用 IntelliJ IDEA 编写Markdown格式文件</title>
      <link href="/2018/02/11/%E4%BD%BF%E7%94%A8%20IntelliJ%20IDEA%20%E7%BC%96%E5%86%99Markdown%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6--20180211/"/>
      <content type="html"><![CDATA[<p>为了提交写作效率，建议使用 IntelliJ IDEA 作为 Markdown 编辑工具  </p><ul><li>IntelliJ IDEA 有各种各样的快捷键</li><li>IntelliJ IDEA 可以快速地全文检索项目所有的文件</li><li>对 JavaScript、CSS、HTML 等常见语言的良好支持，方便修改主题</li><li>自定义模板，可以自动生成Hexo格式模板</li></ul><a id="more"></a><h2 id="一、安装软件"><a href="#一、安装软件" class="headerlink" title="一、安装软件"></a>一、安装软件</h2><h3 id="1、安装-IntelliJ-IDEA"><a href="#1、安装-IntelliJ-IDEA" class="headerlink" title="1、安装 IntelliJ IDEA"></a>1、安装 IntelliJ IDEA</h3><p>下载JetBrains IntelliJ IDEA Ultimate 2017.3.4 Build 173.4548.28<br>激活方式选择 Licensce Server  —<a href="http://idea.java.sx/" target="_blank" rel="noopener">http://idea.java.sx/</a></p><h3 id="2、安装Markdown-Navigator插件并破解"><a href="#2、安装Markdown-Navigator插件并破解" class="headerlink" title="2、安装Markdown Navigator插件并破解"></a>2、安装Markdown Navigator插件并破解</h3><p> 进入 JetBrains IntelliJ IDEA</p><ul><li>安装插件  </li></ul><p><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic01.png" width="600px"></p><p>在搜索框中输入 “markdown”，选择左侧的“Markdown Navigator”，单击右侧的“Install”，完成安装。  </p><p><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic02.png" width="600px">  </p><ul><li>破解Markdown Navigator<br>安装完成之后需要重启JetBrains IntelliJ IDEA 。<br>下载<a href="https://github.com/CrazyBunQnQ/multimarkdown" target="_blank" rel="noopener"> Markdown Navigator破解补丁</a><br>破解办法参考破解补丁网页<br><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic03.png" width="600px"></li></ul><p>如上图，查看该插件的License信息，可以看到破解是否成功。</p><h2 id="二、自定义Hexo的MD文件模板（注释模板）"><a href="#二、自定义Hexo的MD文件模板（注释模板）" class="headerlink" title="二、自定义Hexo的MD文件模板（注释模板）"></a>二、自定义Hexo的MD文件模板（注释模板）</h2><h3 id="1、进入IntelliJ-IDEA-，选择Settings–-gt-Editor–-gt-Live-Templates"><a href="#1、进入IntelliJ-IDEA-，选择Settings–-gt-Editor–-gt-Live-Templates" class="headerlink" title="1、进入IntelliJ IDEA ，选择Settings–&gt;Editor–&gt;Live Templates"></a>1、进入IntelliJ IDEA ，选择Settings–&gt;Editor–&gt;Live Templates</h3><h3 id="2、点击-号，选择Template-Group，输入名称（任意）"><a href="#2、点击-号，选择Template-Group，输入名称（任意）" class="headerlink" title="2、点击+号，选择Template Group，输入名称（任意）"></a>2、点击+号，选择Template Group，输入名称（任意）</h3><p><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic04.png" width="600px"></p><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic0402.png" width="300px"></p><h3 id="3、选择新建的Template-Group，点击-号，选择Live-Template"><a href="#3、选择新建的Template-Group，点击-号，选择Live-Template" class="headerlink" title="3、选择新建的Template Group，点击+号，选择Live Template"></a>3、选择新建的Template Group，点击+号，选择Live Template</h3><p><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic05.png" width="600px"></p><h3 id="4、定义缩略语快捷键及模板内容"><a href="#4、定义缩略语快捷键及模板内容" class="headerlink" title="4、定义缩略语快捷键及模板内容"></a>4、定义缩略语快捷键及模板内容</h3><ul><li>在“Abbreviation”中输入缩略语，“Template text”中输入模板内容。</li><li><p>单击“Change”选择“Markdown”</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802110706/pic06.png" width="600px"></p></li></ul><p>当编辑“Markdown”类型的文件时，输入Hexo再按下tab，就会出现自定义模板了。</p><p>【其它】  </p><ol><li>Intellij IDEA 编辑器自动换行<br>settings -&gt; Editor -&gt; Virtual Space -&gt;Use Soft Wraps in editor</li></ol><hr><p>【发布时间】: 201802110706<br>【版        本】: V1.0<br>【修改时间】: 20180211</p>]]></content>
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Markdown </category>
          
          <category> t </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于Github，使用Hexo搭建个人博客</title>
      <link href="/2018/02/11/%E5%9F%BA%E4%BA%8EGithub%EF%BC%8C%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2--20180205/"/>
      <content type="html"><![CDATA[<p>经过在网上各种找资料，踩过各种坑，终于搭建好了hexo，直接与gitbub一起使用，搭建起自己的免费的博客。  </p><a id="more"></a> <h2 id="一、安装Hexo"><a href="#一、安装Hexo" class="headerlink" title="一、安装Hexo"></a>一、安装Hexo</h2><p>　　Hexo是基于Node.js的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github 和 Heroku上。</p><h3 id="1、下载安装node-js"><a href="#1、下载安装node-js" class="headerlink" title="1、下载安装node.js"></a>1、下载安装node.js</h3><h4 id="1-1下载安装"><a href="#1-1下载安装" class="headerlink" title="1.1下载安装"></a>1.1下载安装</h4><p>　去<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs官网</a>下载通用版。node-v8.9.4-x64.msi</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic01.png" width="400px"></p><h4 id="1-2、-检验nodejs是否安装成功，执行下面的命令："><a href="#1-2、-检验nodejs是否安装成功，执行下面的命令：" class="headerlink" title="1.2、 检验nodejs是否安装成功，执行下面的命令："></a>1.2、 检验nodejs是否安装成功，执行下面的命令：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\&gt;node -v  </span><br><span class="line">v8.9.4  </span><br><span class="line">D:\\&gt;npm -v  </span><br><span class="line">5.6.0</span><br></pre></td></tr></table></figure><h3 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装Git</h3><p>Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><h4 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h4><p>在 Git 官网：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a> 下载安装包 Git-2.15.1.2-64-bit.exe</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic02.png" width="400px">  </p><p>安装和配置好Git环境，成功安装的象征是，鼠标右键菜单中出现如下两个选项<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic03.png" width="400px">  </p><p>【注】一般出于安全考虑，只有在 Git Bash Here中才能进行Git的相关操作。<br>如果需要在cmd命令行中调用Git，就要配置电脑的环境变量Path，<br>或者在安装时选择“use Git from the Windows Command Prompt”。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;git --version  </span><br><span class="line">git version 2.15.1.windows.2</span><br></pre></td></tr></table></figure></p><h3 id="3、安装hexo"><a href="#3、安装hexo" class="headerlink" title="3、安装hexo"></a>3、安装hexo</h3><h4 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h4><p>使用npm完成hexo的安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;npm install hexo-cli -g  </span><br><span class="line">C:\Users\Administrator\AppData\Roaming\npm\hexo -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\bin\hexo  </span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\hexo-cli\node_modules\fsevents):  </span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-cli@1.0.4  </span><br><span class="line">updated 1 package in 13.92s</span><br></pre></td></tr></table></figure></p><h4 id="3-2-查看Hexo的版本"><a href="#3-2-查看Hexo的版本" class="headerlink" title="3.2 查看Hexo的版本"></a>3.2 查看Hexo的版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;hexo version  </span><br><span class="line">hexo: 3.5.0</span><br><span class="line">hexo-cli: 1.0.4  </span><br><span class="line">os: Windows_NT 6.1.7601 win32 x64  </span><br><span class="line">http_parser: 2.7.0  </span><br><span class="line">node: 8.9.4  </span><br><span class="line">v8: 6.1.534.50  </span><br><span class="line">uv: 1.15.0  </span><br><span class="line">zlib: 1.2.11  </span><br><span class="line">ares: 1.10.1-DEV  </span><br><span class="line">modules: 57  </span><br><span class="line">nghttp2: 1.25.0  </span><br><span class="line">openssl: 1.0.2n  </span><br><span class="line">icu: 59.1  </span><br><span class="line">unicode: 9.0  </span><br><span class="line">cldr: 31.0.1  </span><br><span class="line">tz: 2017b</span><br></pre></td></tr></table></figure><h2 id="二、创建Github仓库"><a href="#二、创建Github仓库" class="headerlink" title="二、创建Github仓库"></a>二、创建Github仓库</h2><p>GitHub 是一个代码托管平台，提供版本控制功能。除此以外，它还提供一个免费开源Github Pages空间，利用这个空间可以绑定自己的域名，搭建轻量级的博客系统。</p><ul><li><a href="https://github.com/" target="_blank" rel="noopener">Github官网</a>：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></li><li><a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">关于Github Pages免费空间及相关限制的说明</a>：<br><a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="noopener">https://help.github.com/articles/what-is-github-pages/</a><br>截止本文整理时，限制如下：1Gb空间，每月100GB流量，每小时更新（builds）不超过10次<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic17.png" width="400px">  </li></ul><h3 id="1-注册Github"><a href="#1-注册Github" class="headerlink" title="1. 注册Github"></a>1. 注册Github</h3><ul><li>登录官网，输入账号、邮箱、密码,然后点击注册按钮。</li><li><p>初始设置<br>注册完成后,选择Free免费账号完成设置。<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic18.png" width="600px">  </p></li><li><p>登录邮箱，验证账号</p></li></ul><h3 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2. 创建仓库"></a>2. 创建仓库</h3><p>点击“Start a project”，开始创建。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic19.png" width="400px">  </p><ul><li>如下图，Repository name中以“yourname.github.io”的格式输入，yourname是自己Github用的户名。  </li><li>新建的yourname.github.io仓库，将来可以通过<a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a> 地址访问博客。</li><li>每个Github账户只能创建一个这样可以直接使用域名访问的仓库。</li></ul><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic20.png" width="600px"><br>创建完成后，就可以通过<a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a> 地址访问到博客了。</p><h2 id="三-使用Hexo建站"><a href="#三-使用Hexo建站" class="headerlink" title="三. 使用Hexo建站"></a>三. 使用Hexo建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><h3 id="1-初始化网站文件夹"><a href="#1-初始化网站文件夹" class="headerlink" title="1. 初始化网站文件夹"></a>1. 初始化网站文件夹</h3><p>执行下面的命令，将在D:\www下新建一个“leejianzhou.github.io”文件夹，并在该文件夹内生成网站初始化内容。<br>D:\www&gt;hexo init leejianzhou.github.io</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic04.png" width="600px">  </p><h3 id="2-安装网站所需的组件"><a href="#2-安装网站所需的组件" class="headerlink" title="2. 安装网站所需的组件"></a>2. 安装网站所需的组件</h3><p>执行以下两命令，安装网站所需要的组件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\www&gt;cd leejianzhou.github.io  </span><br><span class="line">D:\www\leejianzhou.github.io&gt;npm install    </span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line">up to date in 3.384s</span><br></pre></td></tr></table></figure></p><h3 id="3-网站文件夹说明"><a href="#3-网站文件夹说明" class="headerlink" title="3. 网站文件夹说明"></a>3. 网站文件夹说明</h3><p>新建完成后，指定文件夹的目录如下：</p><p>.<br>├── .deploy         　　#需要部署的文件<br>├── node_modules    #Hexo插件<br>├── public          　　#生成的静态网页文件<br>├── scaffolds       　　#模板<br>├── source         　　 #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里<br>| 　　　├── _drafts       　　#草稿<br>| 　　　└── _posts       　　 #文章<br>├── themes          　　#主题<br>├── _config.yml     　　#全局配置文件<br>└── package.json    　　#npm 依赖等  </p><h3 id="4-启动本地Hexo服务"><a href="#4-启动本地Hexo服务" class="headerlink" title="4. 启动本地Hexo服务"></a>4. 启动本地Hexo服务</h3><p>执行以下命令，启动Hexo本地HTTP服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\www\leejianzhou.github.io&gt;hexo s   </span><br><span class="line">INFO  Start processing  </span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p><p>打开浏览器，在地址栏中输入“<a href="http://localhost:4000”，就可看到本地的博客。" target="_blank" rel="noopener">http://localhost:4000”，就可看到本地的博客。</a><br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic05.png" width="600px">  </p><h2 id="四、-关联本地Hexo-与-Github-Pages"><a href="#四、-关联本地Hexo-与-Github-Pages" class="headerlink" title="四、 关联本地Hexo 与 Github Pages"></a>四、 关联本地Hexo 与 Github Pages</h2><p>通过SSH，可以将本地Hexo博客，与Github建立联系。</p><h3 id="1-生成本地SSH-keys"><a href="#1-生成本地SSH-keys" class="headerlink" title="1. 生成本地SSH keys"></a>1. 生成本地SSH keys</h3><p>使用Git中的SSH，生成本地SSH keys。执行以下命令（替换成自己的邮箱）：<br>ssh-keygen -t rsa -C “leejianzhou@gmail.com”  </p><p>执行程序后，提示输入密码。这个密码会在将来提交博客到Github时使用。如果为空，提交时就不用输入，这里就没有输入密码，直接按回车。<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic06.png" width="500px"></p><p>【注】若ssh-keygen命令无法执行，需要将Git程序位置（如下）添加到Path变量中。<br><code>C:\Program Files (x86)\Git\usr\bin</code></p><h3 id="2-将本地SSH-keys-添加到Github"><a href="#2-将本地SSH-keys-添加到Github" class="headerlink" title="2. 将本地SSH keys 添加到Github"></a>2. 将本地SSH keys 添加到Github</h3><ul><li><p><strong>找到存储本地SSH keys的文件（如下, Administrator替换成自己计算机的用户名）。</strong><br><code>C:\Users\Administrator\.ssh\id_rsa.pub</code><br>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic0602.png" width="300px">  </p></li><li><p><strong>将文件中的内容复制，粘贴到Github的<code>new SSH key</code>中</strong><br>进入<a href="https://github.com/settings/keys，如下图。" target="_blank" rel="noopener">https://github.com/settings/keys，如下图。</a><br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic07.png" width="600px"></p></li></ul><p>点击“New SSH key”按钮，进入<code>new SSH key</code>（如下图），在Title中输入一个名字，在Key中粘贴所复制的内容。单击“Add SSH key”按钮，完成添加。</p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic08.png" width="200px"></p><ul><li><p><strong>测试与Github的连接</strong><br>输入如下的命令，测验连接是否成功。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com  </span><br><span class="line">Hi leejianzhou! You&apos;ve successfully authenticated, but GitHub does not provide s</span><br><span class="line">hell access.</span><br></pre></td></tr></table></figure></li><li><p><strong>配置Git个人信息</strong><br>完善个人信息。Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;leejianzhou&quot;  </span><br><span class="line">git config --global user.email &quot;leejianzhou@gmail.com&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-配置Deployment"><a href="#3-配置Deployment" class="headerlink" title="3. 配置Deployment"></a>3. 配置Deployment</h3><p>在_config.yml文件中，找到Deployment，然后按照如下修改，用户名改成自己的：</p><p>【注意】冒号后面记得空一格！<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">    deploy:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">    repo: git@github.com:leejianzhou/leejianzhou.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></p><p>repo值是Github项目里“Clone or download”按钮中“Use SSH”值，如下图。  </p><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic09.png" width="600px"></p><h2 id="五、-提交本地博客到Github-Pages"><a href="#五、-提交本地博客到Github-Pages" class="headerlink" title="五、 提交本地博客到Github Pages"></a>五、 提交本地博客到Github Pages</h2><h3 id="1-新建一篇本地博文"><a href="#1-新建一篇本地博文" class="headerlink" title="1. 新建一篇本地博文"></a>1. 新建一篇本地博文</h3><p>执行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\www\leejianzhou.github.io&gt;hexo new post &quot;你好，Hexo!&quot;</span><br><span class="line">INFO  Created: D:\www\leejianzhou.github.io\source\_posts\你好，Hexo.md</span><br></pre></td></tr></table></figure><p>在_posts目录中将看到已经创建的md文件。</p><p>  .<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic10.png" width="400px"></p><h3 id="2-安装hexo-deployer-git-扩展"><a href="#2-安装hexo-deployer-git-扩展" class="headerlink" title="2. 安装hexo-deployer-git 扩展"></a>2. 安装hexo-deployer-git 扩展</h3><p>在生成以及部署文章之前，需要安装一个扩展：<br><code>npm install hexo-deployer-git --save</code></p><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic11.png" width="600px"></p><h3 id="3-使用编辑器编辑文章"><a href="#3-使用编辑器编辑文章" class="headerlink" title="3. 使用编辑器编辑文章"></a>3. 使用编辑器编辑文章</h3><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic12.png" width="600px"></p><h3 id="4-生成并部署到Github-Pages"><a href="#4-生成并部署到Github-Pages" class="headerlink" title="4. 生成并部署到Github Pages"></a>4. 生成并部署到Github Pages</h3><ul><li>删除旧的public 文件<br>hexo clean</li><li>生成新的public文件<br>hexo generate</li><li>部署到Github Pages<br>hexo deploye</li></ul><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic13.png" width="400px"></p><ul><li>浏览网站<br>在浏览器中输入地址：<code>http://用户名.github.io</code>(用户名替换成自己的)，就可以看到自己的博客及新发表的文章。  </li></ul><p>.<br><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic14.png" width="400px"></p><h2 id="六、将GitHub-Pages地址解析到个人域名"><a href="#六、将GitHub-Pages地址解析到个人域名" class="headerlink" title="六、将GitHub Pages地址解析到个人域名"></a>六、将GitHub Pages地址解析到个人域名</h2><p>Github Pages允许用户使用其默认提供的二级域名   XXXX.github.io，也可以使用指定的域名发布站点。  </p><h3 id="1-个人域名中添加解析"><a href="#1-个人域名中添加解析" class="headerlink" title="1. 个人域名中添加解析"></a>1. 个人域名中添加解析</h3><h4 id="1-1-域名方式，如-baidu-com"><a href="#1-1-域名方式，如-baidu-com" class="headerlink" title="1.1 域名方式，如 baidu.com"></a>1.1 域名方式，如 baidu.com</h4><ul><li>记录类型： CNAME</li><li>主机记录： @</li><li>解析线路： 默认</li><li>记录值： XXXX.github.io  (XXXX替换成自己的名字)  </li></ul><h4 id="1-2-www方式，如www-baidu-com"><a href="#1-2-www方式，如www-baidu-com" class="headerlink" title="1.2 www方式，如www.baidu.com"></a>1.2 www方式，如www.baidu.com</h4><ul><li>记录类型 CNAME</li><li>主机记录 www</li><li>解析线路 默认</li><li>记录值 XXXX.github.io  (XXXX替换成自己的名字)</li></ul><p><img src="http://blog2018.nos-eastchina1.126.net/201802052225/pic15.png" width="600px"></p><h3 id="2-添加CNAME文件"><a href="#2-添加CNAME文件" class="headerlink" title="2. 添加CNAME文件"></a>2. 添加CNAME文件</h3><ul><li><p>博客本地目录里的source目录下，添加一个CNAME文件，文件名大写，不带后缀。<br>该目录中，可以存放如CNAME、favicon.ico、images等，这样在 hexo d 之后就不会被删除了。</p></li><li><p>以文本编辑器打开CNAME，里面添加自己的域名信息（不加<a href="http://），如下：" target="_blank" rel="noopener">http://），如下：</a><br>  leejianzhou.cn</p></li><li><p>修改 _config.yml<br> 打开 _config.yml文件，将url的值改成自己的域名。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http://leejianzhou.cn  </span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/  </span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></li><li><p>填写完了之后再重新部署到Github pages上（部署简写命令hexo d -g)</p></li></ul><hr><p>【发布时间】: 201802052225<br>【版        本】: V1.1<br>【修改时间】: 20180211</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
