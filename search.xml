<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo生成一篇新文章]]></title>
    <url>%2F2018%2F02%2F14%2FHexo%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E6%96%87%E7%AB%A0--20180214%2F</url>
    <content type="text"><![CDATA[一、官方文档 使用 hexo new [layout] &lt;title&gt; 命令生成一篇文章。若 layout 没有指明的话，hexo会使用“_config.yml”中 default_layout 的默认配置（post）。若title包含空格，要用引号括起来。 二、layout三个选项Hexo提供了3种布局，post、page和draft，路径分别为：source/_posts、source/xxx、source/_draft，默认布局是post。这3种布局来源于scaffolds（模板）文件夹的三个md文件，如下图： 【注】新建文章时，Hexo 也可根据 scaffolds 文件夹内相对应的文件来建立文件，例如：1$ hexo new photo &quot;My Gallery&quot; 在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章. 三、使用默认布局post，发表文章1、执行命令，生成md文件执行hexo new post myBlog ，提示信息如下： 123$ hexo new post myBlogINFO Created: D:\www\leejianzhou.github.io\source\_posts\myBlog.mdAdministrator@CW-001 MINGW32 /d/www/leejianzhou.github.io 上面的命令在 source\_post 文件夹中生成了一个“myBlog.md”文件。 2、编辑“myBlog.md”文件使用Markdown编辑器打开生成的“myBlog.md”文件。 title：文章页面上的显示标题，可以修改，不会出现在URL中 date：文件创建日期时间，可以修改 tags: 文章的标签，可空，多标签请用格式[tag1,tag2,tag3] 上下两套横线之间的内容，在未来的文章之中不会出现。编写这一部分内容时要注意，两套横线不要删除，冒号前的内容不要修改，冒号后面跟一个空格。文章的正文支持Markdown语法，下面是这个文件编辑修改后的内容：. 执行“hexo generate”命令，Hexo 监视网站内的文件变动并立即重新生成静态文件。 执行 “hexo server” 启动本地服务器，如下图。 打开浏览器，登录“http://localhost:4000”就可看到本地的博客。 四、使用draft布局发表文章使用这种布局生成的md文件，将放到source/_drafts文件夹中，这个md文件不被显示在网站的页面，将做为draft（草稿）保存起来。 1、生成草稿文件下面的hexo new draft &quot;草稿--draft&quot;命令，会在source/_drafts目录下生成一个“草稿-draft.md”文件。 . 2、强行预览草稿文件预览草稿文件，有以下二种方式： 更改配置文件_config.yml： render_drafts: true 以如下方式启动本地服务器：hexo server --drafts 3、发布草稿文件使用hexo publish [layout] &lt;filename&gt;命令可以把草稿变成文章，或者页面，如下所示： 执行命令后， “草稿-draft.md”文件被发布到了_posts文件夹中。 五、使用page布局，创建新的路径1、执行hexo new page &quot;about&quot;命令，如下： 这个命令将在source文件夹下建立一个“about”文件夹，里面会有一个index.md的文件。 . 2、编辑index.md文件使用Markdown编辑器打开生成的“index.md”文件，随便添加了点内容。 3、将新路径的链接添加到页面中打开当前主题中的配置文件themes/&lt;theme_name&gt;/_config.yml 在menu:项中添加 关于: /about，保存退出。. 生成页面，打开博客后，在页面中就看到了“关于”链接。 单击“关于”链接，将打开这个页面。 【发布时间】: 201802141650【版 本】: V1.0【修改时间】: 20180214]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo中Next主题的配置]]></title>
    <url>%2F2018%2F02%2F14%2FHexo%E4%B8%ADNext%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE--20180214%2F</url>
    <content type="text"><![CDATA[一、主题官网网址：https://github.com/theme-next/hexo-theme-next 中文说明文档 1、下载最新 master 分支 使用 git 安装，在博客网站本地文件夹中，打开“Git Bash Here”，执行命令： git clone https://github.com/theme-next/hexo-theme-next themes/next . . 2、编辑 _config.yml配置文件，修改主题在 hexo 根配置文件 _config.yml 中设置主题：1theme: next 二、配置1、更改主题样式 Next主题提供了四种样式，修改主题中的配置文件_config.yml，可以实现样式的更改。 编辑_config.yml，搜索 scheme 关键字，将相应样式前的#去掉。. 2、更改博客语言按照next的官方指导教程，我们顺便修改一下站点配置文件里面的语言（也就是整个博客的语言）将language后面的内容修改为 zh-CN。注意，冒号之后必有空格！ 3、创建分类页面添加一个 分类 页面，并在菜单中显示页面链接。 新建一个页面，命名为 categories 。命令如下： hexo new page categories 编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。 123title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot; 注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如： 1234title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot;comments: false 在菜单中添加链接。编辑主题的 _config.yml ，将 menu 中的 categories: /categories 注释去掉，如下: 12345menu: home: / categories: /categories archives: /archives tags: /tags 【注】文章中设置多级目标实例： title: 使用 IntelliJ IDEA 编写Markdown格式文件date: 2018-02-11categories: 笔记 Markdown ttags: [Markdown] 4、创建标签云页面添加一个标签云页面，并在菜单中显示页面链接。 新建一个页面，命名为 tags 。命令如下： 1hexo new page &quot;tags&quot; 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。 123title: All tagsdate: 2014-12-22 12:39:04type: &quot;tags&quot; 注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如： 1234title: All tagsdate: 2014-12-22 12:39:04type: &quot;tags&quot;comments: false 在菜单中添加链接。编辑主题的 _config.yml ，添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 5、设置侧边栏头像编辑主题的 _config.yml，新增字段 avatar， 值设置成头像的链接地址。 其中，头像的链接地址可以是： 完整的互联网 URL，例如：https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460 站点内的地址，例如： /uploads/avatar.jpg 需要将你的头像图片放置在 站点的 source/uploads/（可能需要新建uploads目录）/images/avatar.jpg 需要将你的头像图片放置在 主题的 source/images/ 目录下。 6.侧边栏社交链接侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。 链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。 配置示例 12345678Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name 微博: http://weibo.com/your-user-name 豆瓣: http://douban.com/people/your-user-name 知乎: http://www.zhihu.com/people/your-user-name # 等等 设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。 配置示例 1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 7、开启百度统计登录 百度统计（https://tongji.baidu.com），定位到站点的代码获取页面复制 hm.js? 后面那串统计脚本 id，如下图所示： 编辑 主题配置文件， 修改字段 baidu_analytics，值设置成你的百度统计脚本 id。 baidu_analytics: 89920f7b4f69c70fb85c179b7689f3cc 8、添加关于 执行hexo new page &quot;about&quot;命令 编辑修改生成的md文件source\about\index.md 主题配置文件中，找到menu，将以下信息前的注释去掉：about: /about/ || user 9、添加友情链接编辑 主题配置文件 添加： 友情链接配置示例 12345# titlelinks_title: 友情链接links: MacTalk: http://macshuo.com/ Title: http://example.com/ 10、腾讯公益404页面11、订阅微信公众号注意： 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。 在微信公众号平台下载您的二维码，并将它存放于博客source/uploads/目录下。 然后编辑 主题配置文件，如下： 配置示例 12345# Wechat Subscriberwechat_subscriber: enabled: true qcode: /uploads/wechat-qcode.jpg description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！ 12、开启打赏功能越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。 打赏功能配置示例 12reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: /uploads/wechatpay.png 13、代码块自定义样式 `` 内的打开自定义 CSS： \themes\next\source\css_custom\custom.styl 加入123456789101112131415// 代码块自定义样式``内的code &#123; color: #fc6423; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 14、设置代码高亮主题NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties： 更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如： 高亮主题设置示例 1234# Code Highlight theme# Available value: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal 15、文章底部的那个带 #号的标签文章底部的那个带 #号的标签，比如 #NexT，可以把 #换成图标吗，怎么设置? 修改模板 layout/_macro/post.swig 搜索 rel=&quot;tag&quot;&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 16、修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。修改文件 themes\next\source\css\_common\components\post\post.styl ，添加如下 css 样式，： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 选择.post-body 是为了不影响标题，选择p是为了不影响首页 “阅读全文” 的显示样式。 17、开启本地搜索添加百度/谷歌/本地 自定义站点内容搜索 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： npm install hexo-generator-searchdb –save 编辑 站点配置文件，新增以下内容到任意位置： search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 18、开启向百度搜索手动推送内容（百度无法抓取github内容，没用）添加站点地图先要安装插件Git Bash输入以下命令12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在博客的站点配置文件_config.yml中添加以下代码12345# 自动生成sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 然后编译一下博客 hexo clean &amp;&amp; hexo generate 这时候在博客的public文件夹下面就会出现站点地图sitemap.xml和baidusitemap.xml了 sitemap提交sitemap提交最上面提过了，直接提交http://tengj.top/baidusitemap.xml 就行，大家看下图就知道，一开始我是提交 sitemap.xml，里面是指向github的，结果主域校验失败了，后来切换到指向tengj.top域名的baidusitemap.xml就提交成功。 【发布时间】: 201802141600【版 本】: V1.1【修改时间】: 20180215]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 IntelliJ IDEA 编写Markdown格式文件]]></title>
    <url>%2F2018%2F02%2F11%2F%E4%BD%BF%E7%94%A8%20IntelliJ%20IDEA%20%E7%BC%96%E5%86%99Markdown%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6--20180211%2F</url>
    <content type="text"><![CDATA[为了提交写作效率，建议使用 IntelliJ IDEA 作为 Markdown 编辑工具 IntelliJ IDEA 有各种各样的快捷键 IntelliJ IDEA 可以快速地全文检索项目所有的文件 对 JavaScript、CSS、HTML 等常见语言的良好支持，方便修改主题 自定义模板，可以自动生成Hexo格式模板 一、安装软件1、安装 IntelliJ IDEA下载JetBrains IntelliJ IDEA Ultimate 2017.3.4 Build 173.4548.28激活方式选择 Licensce Server —http://idea.java.sx/ 2、安装Markdown Navigator插件并破解 进入 JetBrains IntelliJ IDEA 安装插件 在搜索框中输入 “markdown”，选择左侧的“Markdown Navigator”，单击右侧的“Install”，完成安装。 破解Markdown Navigator安装完成之后需要重启JetBrains IntelliJ IDEA 。下载 Markdown Navigator破解补丁破解办法参考破解补丁网页 如上图，查看该插件的License信息，可以看到破解是否成功。 二、自定义Hexo的MD文件模板（注释模板）1、进入IntelliJ IDEA ，选择Settings–&gt;Editor–&gt;Live Templates2、点击+号，选择Template Group，输入名称（任意） . 3、选择新建的Template Group，点击+号，选择Live Template 4、定义缩略语快捷键及模板内容 在“Abbreviation”中输入缩略语，“Template text”中输入模板内容。 单击“Change”选择“Markdown” 当编辑“Markdown”类型的文件时，输入Hexo再按下tab，就会出现自定义模板了。 【其它】 Intellij IDEA 编辑器自动换行settings -&gt; Editor -&gt; Virtual Space -&gt;Use Soft Wraps in editor 【发布时间】: 201802110706【版 本】: V1.0【修改时间】: 20180211]]></content>
      <categories>
        <category>笔记</category>
        <category>Markdown</category>
        <category>t</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Github，使用Hexo搭建个人博客]]></title>
    <url>%2F2018%2F02%2F11%2F%E5%9F%BA%E4%BA%8EGithub%EF%BC%8C%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2--20180205%2F</url>
    <content type="text"><![CDATA[经过在网上各种找资料，踩过各种坑，终于搭建好了hexo，直接与gitbub一起使用，搭建起自己的免费的博客。 一、安装Hexo Hexo是基于Node.js的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github 和 Heroku上。 1、下载安装node.js1.1下载安装 去nodejs官网下载通用版。node-v8.9.4-x64.msi 1.2、 检验nodejs是否安装成功，执行下面的命令：1234C:\Users\Administrator\&gt;node -v v8.9.4 D:\\&gt;npm -v 5.6.0 2、安装GitGit 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 2.1 安装在 Git 官网：https://git-scm.com/ 下载安装包 Git-2.15.1.2-64-bit.exe 安装和配置好Git环境，成功安装的象征是，鼠标右键菜单中出现如下两个选项 【注】一般出于安全考虑，只有在 Git Bash Here中才能进行Git的相关操作。如果需要在cmd命令行中调用Git，就要配置电脑的环境变量Path，或者在安装时选择“use Git from the Windows Command Prompt”。12D:\&gt;git --version git version 2.15.1.windows.2 3、安装hexo3.1 安装使用npm完成hexo的安装1234567D:\&gt;npm install hexo-cli -g C:\Users\Administrator\AppData\Roaming\npm\hexo -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\bin\hexo npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\hexo-cli\node_modules\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)+ hexo-cli@1.0.4 updated 1 package in 13.92s 3.2 查看Hexo的版本1234567891011121314151617D:\&gt;hexo version hexo: 3.5.0hexo-cli: 1.0.4 os: Windows_NT 6.1.7601 win32 x64 http_parser: 2.7.0 node: 8.9.4 v8: 6.1.534.50 uv: 1.15.0 zlib: 1.2.11 ares: 1.10.1-DEV modules: 57 nghttp2: 1.25.0 openssl: 1.0.2n icu: 59.1 unicode: 9.0 cldr: 31.0.1 tz: 2017b 二、创建Github仓库GitHub 是一个代码托管平台，提供版本控制功能。除此以外，它还提供一个免费开源Github Pages空间，利用这个空间可以绑定自己的域名，搭建轻量级的博客系统。 Github官网：https://github.com/ 关于Github Pages免费空间及相关限制的说明：https://help.github.com/articles/what-is-github-pages/截止本文整理时，限制如下：1Gb空间，每月100GB流量，每小时更新（builds）不超过10次 1. 注册Github 登录官网，输入账号、邮箱、密码,然后点击注册按钮。 初始设置注册完成后,选择Free免费账号完成设置。 登录邮箱，验证账号 2. 创建仓库点击“Start a project”，开始创建。 如下图，Repository name中以“yourname.github.io”的格式输入，yourname是自己Github用的户名。 新建的yourname.github.io仓库，将来可以通过http://yourname.github.io 地址访问博客。 每个Github账户只能创建一个这样可以直接使用域名访问的仓库。 .创建完成后，就可以通过http://yourname.github.io 地址访问到博客了。 三. 使用Hexo建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 1. 初始化网站文件夹执行下面的命令，将在D:\www下新建一个“leejianzhou.github.io”文件夹，并在该文件夹内生成网站初始化内容。D:\www&gt;hexo init leejianzhou.github.io 2. 安装网站所需的组件执行以下两命令，安装网站所需要的组件。12345D:\www&gt;cd leejianzhou.github.io D:\www\leejianzhou.github.io&gt;npm install npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)up to date in 3.384s 3. 网站文件夹说明新建完成后，指定文件夹的目录如下： .├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json #npm 依赖等 4. 启动本地Hexo服务执行以下命令，启动Hexo本地HTTP服务器123D:\www\leejianzhou.github.io&gt;hexo s INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 打开浏览器，在地址栏中输入“http://localhost:4000”，就可看到本地的博客。 四、 关联本地Hexo 与 Github Pages通过SSH，可以将本地Hexo博客，与Github建立联系。 1. 生成本地SSH keys使用Git中的SSH，生成本地SSH keys。执行以下命令（替换成自己的邮箱）：ssh-keygen -t rsa -C “leejianzhou@gmail.com” 执行程序后，提示输入密码。这个密码会在将来提交博客到Github时使用。如果为空，提交时就不用输入，这里就没有输入密码，直接按回车。 【注】若ssh-keygen命令无法执行，需要将Git程序位置（如下）添加到Path变量中。C:\Program Files (x86)\Git\usr\bin 2. 将本地SSH keys 添加到Github 找到存储本地SSH keys的文件（如下, Administrator替换成自己计算机的用户名）。C:\Users\Administrator\.ssh\id_rsa.pub. 将文件中的内容复制，粘贴到Github的new SSH key中进入https://github.com/settings/keys，如下图。 点击“New SSH key”按钮，进入new SSH key（如下图），在Title中输入一个名字，在Key中粘贴所复制的内容。单击“Add SSH key”按钮，完成添加。 测试与Github的连接输入如下的命令，测验连接是否成功。 123ssh -T git@github.com Hi leejianzhou! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 配置Git个人信息完善个人信息。Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的。 12git config --global user.name &quot;leejianzhou&quot; git config --global user.email &quot;leejianzhou@gmail.com&quot; 3. 配置Deployment在_config.yml文件中，找到Deployment，然后按照如下修改，用户名改成自己的： 【注意】冒号后面记得空一格！123456# Deployment## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: git@github.com:leejianzhou/leejianzhou.github.io.git branch: master repo值是Github项目里“Clone or download”按钮中“Use SSH”值，如下图。 五、 提交本地博客到Github Pages1. 新建一篇本地博文执行以下命令: 12D:\www\leejianzhou.github.io&gt;hexo new post &quot;你好，Hexo!&quot;INFO Created: D:\www\leejianzhou.github.io\source\_posts\你好，Hexo.md 在_posts目录中将看到已经创建的md文件。 . 2. 安装hexo-deployer-git 扩展在生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git --save . 3. 使用编辑器编辑文章 4. 生成并部署到Github Pages 删除旧的public 文件hexo clean 生成新的public文件hexo generate 部署到Github Pageshexo deploye . 浏览网站在浏览器中输入地址：http://用户名.github.io(用户名替换成自己的)，就可以看到自己的博客及新发表的文章。 . 六、将GitHub Pages地址解析到个人域名Github Pages允许用户使用其默认提供的二级域名 XXXX.github.io，也可以使用指定的域名发布站点。 1. 个人域名中添加解析1.1 域名方式，如 baidu.com 记录类型： CNAME 主机记录： @ 解析线路： 默认 记录值： XXXX.github.io (XXXX替换成自己的名字) 1.2 www方式，如www.baidu.com 记录类型 CNAME 主机记录 www 解析线路 默认 记录值 XXXX.github.io (XXXX替换成自己的名字) 2. 添加CNAME文件 博客本地目录里的source目录下，添加一个CNAME文件，文件名大写，不带后缀。该目录中，可以存放如CNAME、favicon.ico、images等，这样在 hexo d 之后就不会被删除了。 以文本编辑器打开CNAME，里面添加自己的域名信息（不加http://），如下： leejianzhou.cn 修改 _config.yml 打开 _config.yml文件，将url的值改成自己的域名。 1234url: http://leejianzhou.cn root: /permalink: :year/:month/:day/:title/ permalink_defaults: 填写完了之后再重新部署到Github pages上（部署简写命令hexo d -g) 【发布时间】: 201802052225【版 本】: V1.1【修改时间】: 20180211]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
